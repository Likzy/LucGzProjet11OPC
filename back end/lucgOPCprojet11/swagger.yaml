swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/{userId}/accounts:
    get:
      tags:
          - Accounts and payments
      summary: Recupere les comptes de l'utilisateur ainsi que leur balances et different payements
      description: Renvoie les comptes du user.
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: L'identifiant de l'utilisateur.
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: Le token d'authentification de l'utilisateur.
      responses:
        "200":
          
          schema:
            $ref: "#/definitions/AccountsResponse"
          examples:
            application/json:
              Accounts:
                - AccountName: "Account 1"
                  AccountId: "12345"
                  Balance: "1256.00"
                - AccountName: "Account 2"
                  AccountId: "67890"
                  Balance: "1896.67"
                - AccountName: "Account 3"
                  AccountId: "54321"
                  Balance: "2596.47"
              Payments:
                - AccountId: "12345"
                  PaymentId: "896544112552"
                  PaymentValue: "65"
                  PaymentCategory: "Food"
                  PaymentNote: "Restaurant with bob"
                - AccountId: "12345"
                  PaymentId: "8965488639952"
                  PaymentValue: "-50"
                  PaymentCategory: "Rent"
                  PaymentNote: ""
                - AccountId: "67890"
                  PaymentId: "89654744752"
                  PaymentValue: "1000"
                  PaymentCategory: "Energy"
                  PaymentNote: "Payed for the whole year"
        "404":
          description: Utilisateur ou compte(s) associé(s) non trouvé(s)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Message d'erreur indiquant que l'utilisateur n'a pas été trouvé.
  /user/{userId}/{accountId}/payments/{paymentId}:
    put:
      tags:
          - Accounts and payments
      summary: Modifier le détail d'un prélèvement
      description: Permet à l'utilisateur identifié par {userId} de modifier le détail (catégorie et note) au format texte d'un prélèvement spécifique identifié par {paymentId}. Les détails mis à jour sont fournis dans le corps de la requête.
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: L'identifiant de l'utilisateur.
        - in: path
          name: paymentId
          required: true
          schema:
            type: integer
          description: L'identifiant du prélèvement à modifier.
        - in: path
          name: accountId
          required: true
          schema:
            type: integer
          description: L'identifiant du compte.
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: Le token d'authentification de l'utilisateur.
        - in: body
          description: Nouveaux détails du prélèvement
          required: true
          content:
            application/json:
          schema:
            $ref: "#/components/schemas/ChangeDetailsBody"

      responses:
        "200":
          description: Réponse réussie
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Message de confirmation de la modification.
        "404":
          description: Prélèvement trouvé
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Message d'erreur indiquant que le prélèvement n'a pas été trouvé.

components:
  schemas:
    ChangeDetailsBody:
      type: object
      properties:
        category:
          type: string
          description: "Example Category"
        note:
          type: string
          description: "Example Note"
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  AccountsResponse:
  type: object
  properties:
    Accounts:
      type: array
      items:
        type: object
        properties:
          AccountName:
            type: string
          AccountId:
            type: string
          Balance:
            type: float
          Payments:
            type: array
            items:
              type: object
              properties:
                PaymentId:
                  type: string
                PaymentValue:
                type: integer
                PaymentCategory:
                  type: string
                PaymentNote:
                  type: string
  PaymentsResponse:
  type: object
  properties:
    Payments:
      type: array
      items:
        type: object
        properties:
          PaymentId:
            type: string
          PaymentValue:
            type: integer
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
